-- SQL-скрипт для загрузки данных из нескольких файлов CSV в соответствующие таблицы

-- 1. Загрузка данных для таблицы Brands
CREATE TABLE IF NOT EXISTS "Brands" (
    "BrandID" SERIAL NOT NULL,
    "BrandName" VARCHAR(100) NOT NULL,
    "Description" TEXT NOT NULL,
    PRIMARY KEY ("BrandID")
);

DROP TABLE IF EXISTS temp_Brands;

CREATE TEMP TABLE temp_Brands (
    "BrandID" INT,
    "BrandName" VARCHAR(100),
    "Description" TEXT
);

COPY temp_Brands ("BrandID", "BrandName", "Description")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Brands.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Brands" ("BrandName", "Description")
SELECT DISTINCT "BrandName", "Description"
FROM temp_Brands
ON CONFLICT ("BrandName") DO NOTHING;

DROP TABLE temp_Brands;

-- 2. Загрузка данных для таблицы Shippers
CREATE TABLE IF NOT EXISTS "Shippers" (
    "ShipperID" SERIAL NOT NULL,
    "CompanyName" VARCHAR(255) NOT NULL,
    "Phone" VARCHAR(15) NOT NULL,
    "Address" TEXT NOT NULL,
    PRIMARY KEY ("ShipperID")
);

DROP TABLE IF EXISTS temp_Shippers;

CREATE TEMP TABLE temp_Shippers (
    "ShipperID" INT,
    "CompanyName" VARCHAR(255),
    "Phone" VARCHAR(15),
    "Address" TEXT
);

COPY temp_Shippers ("ShipperID", "CompanyName", "Phone", "Address")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Shippers.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Shippers" ("CompanyName", "Phone", "Address")
SELECT DISTINCT "CompanyName", "Phone", "Address"
FROM temp_Shippers
ON CONFLICT ("CompanyName") DO NOTHING;

DROP TABLE temp_Shippers;

-- 3. Загрузка данных для таблицы Users
CREATE TABLE IF NOT EXISTS "Users" (
    "UserID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "FullName" VARCHAR(255) NOT NULL,
    "Address" TEXT NOT NULL,
    "Phone" VARCHAR(15) NOT NULL,
    "Email" VARCHAR(255) NOT NULL,
    "RegistrationDate" DATE NOT NULL,
    PRIMARY KEY ("UserID")
);

DROP TABLE IF EXISTS temp_Users;

CREATE TEMP TABLE temp_Users (
    "UserID" BIGINT,
    "FullName" VARCHAR(255),
    "Address" TEXT,
    "Phone" VARCHAR(15),
    "Email" VARCHAR(255),
    "RegistrationDate" DATE
);

COPY temp_Users ("UserID", "FullName", "Address", "Phone", "Email", "RegistrationDate")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Users.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Users" ("FullName", "Address", "Phone", "Email", "RegistrationDate")
SELECT DISTINCT "FullName", "Address", "Phone", "Email", "RegistrationDate"
FROM temp_Users
ON CONFLICT ("Email") DO NOTHING;

DROP TABLE temp_Users;

-- 4. Загрузка данных для таблицы Categories
CREATE TABLE IF NOT EXISTS "Categories" (
    "CategoryID" SERIAL NOT NULL,
    "CategoryName" VARCHAR(100) NOT NULL,
    PRIMARY KEY ("CategoryID")
);

DROP TABLE IF EXISTS temp_Categories;

CREATE TEMP TABLE temp_Categories (
    "CategoryID" INT,
    "CategoryName" VARCHAR(100)
);

COPY temp_Categories ("CategoryID", "CategoryName")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Categories.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Categories" ("CategoryName")
SELECT DISTINCT "CategoryName"
FROM temp_Categories
ON CONFLICT ("CategoryName") DO NOTHING;

DROP TABLE temp_Categories;

-- 5. Загрузка данных для таблицы Products
CREATE TABLE IF NOT EXISTS "Products" (
    "ProductID" SERIAL NOT NULL,
    "ProductName" VARCHAR(255) NOT NULL,
    "Description" TEXT NOT NULL,
    "Price" DECIMAL(8, 2) NOT NULL,
    "QuantityInStock" INTEGER NOT NULL,
    "CategoryID" INTEGER NOT NULL,
    "BrandID" INTEGER NOT NULL,
    PRIMARY KEY ("ProductID"),
    FOREIGN KEY ("CategoryID") REFERENCES "Categories"("CategoryID") ON DELETE CASCADE,
    FOREIGN KEY ("BrandID") REFERENCES "Brands"("BrandID") ON DELETE SET NULL
);

DROP TABLE IF EXISTS temp_Products;

CREATE TEMP TABLE temp_Products (
    "ProductID" INT,
    "ProductName" VARCHAR(255),
    "Description" TEXT,
    "Price" DECIMAL(8, 2),
    "QuantityInStock" INTEGER,
    "CategoryID" INTEGER,
    "BrandID" INTEGER
);

COPY temp_Products ("ProductID", "ProductName", "Description", "Price", "QuantityInStock", "CategoryID", "BrandID")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Products.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Products" ("ProductName", "Description", "Price", "QuantityInStock", "CategoryID", "BrandID")
SELECT DISTINCT "ProductName", "Description", "Price", "QuantityInStock", "CategoryID", "BrandID"
FROM temp_Products
ON CONFLICT ("ProductName") DO NOTHING;

DROP TABLE temp_Products;

-- 6. Загрузка данных для таблицы Orders
CREATE TABLE IF NOT EXISTS "Orders" (
    "OrderID" SERIAL NOT NULL,
    "UserID" BIGINT NOT NULL,
    "OrderDate" TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL,
    "Status" VARCHAR(50) NOT NULL DEFAULT 'Pending',
    "PaymentMethod" VARCHAR(50) NOT NULL,
    "ShipperID" INTEGER NOT NULL,
    PRIMARY KEY ("OrderID"),
    FOREIGN KEY ("UserID") REFERENCES "Users"("UserID") ON DELETE CASCADE,
    FOREIGN KEY ("ShipperID") REFERENCES "Shippers"("ShipperID") ON DELETE SET NULL
);

DROP TABLE IF EXISTS temp_Orders;

CREATE TEMP TABLE temp_Orders (
    "OrderID" INT,
    "UserID" BIGINT,
    "OrderDate" TIMESTAMP(0) WITHOUT TIME ZONE,
    "Status" VARCHAR(50),
    "PaymentMethod" VARCHAR(50),
    "ShipperID" INTEGER
);

COPY temp_Orders ("OrderID", "UserID", "OrderDate", "Status", "PaymentMethod", "ShipperID")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Orders.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Orders" ("UserID", "OrderDate", "Status", "PaymentMethod", "ShipperID")
SELECT DISTINCT "UserID", "OrderDate", "Status", "PaymentMethod", "ShipperID"
FROM temp_Orders
ON CONFLICT ("OrderID") DO NOTHING;

DROP TABLE temp_Orders;

-- 7. Загрузка данных для таблицы Order_Items
CREATE TABLE IF NOT EXISTS "Order_Items" (
    "OrderItemID" SERIAL NOT NULL,
    "OrderID" INTEGER NOT NULL,
    "ProductID" INTEGER NOT NULL,
    "Quantity" INTEGER NOT NULL,
    "Price" DECIMAL(8, 2) NOT NULL,
    PRIMARY KEY ("OrderItemID"),
    FOREIGN KEY ("OrderID") REFERENCES "Orders"("OrderID") ON DELETE CASCADE,
    FOREIGN KEY ("ProductID") REFERENCES "Products"("ProductID") ON DELETE CASCADE
);

DROP TABLE IF EXISTS temp_Order_Items;

CREATE TEMP TABLE temp_Order_Items (
    "OrderItemID" INT,
    "OrderID" INTEGER,
    "ProductID" INTEGER,
    "Quantity" INTEGER,
    "Price" DECIMAL(8, 2)
);

COPY temp_Order_Items ("OrderItemID", "OrderID", "ProductID", "Quantity", "Price")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Order_Items.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Order_Items" ("OrderID", "ProductID", "Quantity", "Price")
SELECT DISTINCT "OrderID", "ProductID", "Quantity", "Price"
FROM temp_Order_Items
ON CONFLICT ("OrderItemID") DO NOTHING;

DROP TABLE temp_Order_Items;

-- 8. Загрузка данных для таблицы Payments
CREATE TABLE IF NOT EXISTS "Payments" (
    "PaymentID" SERIAL NOT NULL,
    "OrderID" INTEGER NOT NULL,
    "PaymentDate" TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL,
    "Amount" DECIMAL(8, 2) NOT NULL,
    "Status" VARCHAR(50) NOT NULL DEFAULT 'Completed',
    PRIMARY KEY ("PaymentID"),
    FOREIGN KEY ("OrderID") REFERENCES "Orders"("OrderID") ON DELETE CASCADE
);

DROP TABLE IF EXISTS temp_Payments;

CREATE TEMP TABLE temp_Payments (
    "PaymentID" INT,
    "OrderID" INTEGER,
    "PaymentDate" TIMESTAMP(0) WITHOUT TIME ZONE,
    "Amount" DECIMAL(8, 2),
    "Status" VARCHAR(50)
);

COPY temp_Payments ("PaymentID", "OrderID", "PaymentDate", "Amount", "Status")
FROM '/Users/rahnedacharnysh/Studing_EHU/DB/DB_project_PetStore/Payments.csv'
DELIMITER ','
CSV HEADER;

INSERT INTO "Payments" ("OrderID", "PaymentDate", "Amount", "Status")
SELECT DISTINCT "OrderID", "PaymentDate", "Amount", "Status"
FROM temp_Payments
ON CONFLICT ("PaymentID") DO NOTHING;

DROP TABLE temp_Payments;
